module.exports = {
  root: true,
  env: {
    jest: true,
    node: true,
  },

  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/typescript',
    'plugin:import/warnings',
    'plugin:jest-formatting/recommended',
    'plugin:typescript-sort-keys/recommended',
    'prettier',
  ],

  overrides: [
    {
      files: ['src/**/*.test.{ts,tsx}'],
      rules: {
        '@next/next/no-img-element': 'off',
      },
    },
  ],

  parser: '@typescript-eslint/parser',

  parserOptions: {
    ecmaVersion: 2020,
    project: ['./tsconfig.json'],
    sourceType: 'module',
    tsconfigRootDir: __dirname,
  },

  plugins: [
    '@typescript-eslint',
    'eslint-plugin-import-helpers',
    'jest',
    'prefer-arrow',
    'prettier',
    'sort-destructure-keys',
    'sort-export-all',
    'typescript-sort-keys',
    'unused-imports',
  ],

  rules: {
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/member-delimiter-style': 'off',
    '@typescript-eslint/member-ordering': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-extra-semi': 'off',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-object-literal-type-assertion': 'off',
    '@typescript-eslint/no-throw-literal': 'error',
    '@typescript-eslint/no-unused-expressions': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-this-alias': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'block-like' },
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: '*', next: ['interface', 'type'] },
      { blankLine: 'always', prev: 'block-like', next: '*' },
      { blankLine: 'always', prev: ['case', 'default'], next: '*' },
      { blankLine: 'always', prev: 'iife', next: '*' },
    ],
    '@typescript-eslint/prefer-for-of': 'off',
    '@typescript-eslint/prefer-function-type': 'warn',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    '@typescript-eslint/quotes': 'off',
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/unified-signatures': 'error',
    'arrow-body-style': ['error', 'as-needed'],
    'constructor-super': 'error',
    'dot-notation': 'error',
    'func-names': ['error', 'never'],
    'func-style': 'off',
    'guard-for-in': 'error',
    'import/extensions': 'off',
    'import-helpers/order-imports': [
      'off',
      {
        alphabetize: { order: 'asc', ignoreCase: false },
        groups: [
          'module',
          '/^(api|assets|components|containers|constant|fragments|hooks|mocks|pages|reducers|settings|strings|styles|test|utils)/',
          '/^styles/',
          '/^public/',
          ['sibling', 'index'],
        ],
        newlinesBetween: 'always',
      },
    ],
    'import/no-extraneous-dependencies': 'off',
    'import/no-unresolved': 'off',
    'jest/expect-expect': ['error', { assertFunctionNames: ['expect'] }],
    'jest/no-alias-methods': 'error',
    'jest/no-disabled-tests': 'warn',
    'jest/no-focused-tests': 'warn',
    'jest/no-identical-title': 'error',
    'jest/no-jasmine-globals': 'error',
    'jest/no-mocks-import': 'error',
    'jest/no-test-callback': 'off',
    'jest/no-test-return-statement': 'error',
    'jest/prefer-to-contain': 'error',
    'jest/prefer-to-have-length': 'error',
    'jest/require-to-throw-message': 'error',
    'jest/valid-describe-callback': 'error',
    'jest/valid-expect-in-promise': 'error',
    'jest/valid-expect': 'error',
    'jest/valid-title': 'error',
    'max-classes-per-file': ['warn', 1],
    'newline-after-var': [2, 'always'],
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': 'off',
    'no-debugger': 'error',
    'no-empty': 'error',
    'no-eval': 'error',
    'no-new-wrappers': 'error',
    'no-redeclare': 'error',
    'no-undef-init': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-labels': 'error',
    'no-unused-vars': 'off',
    'no-use-before-define': 'off',
    'no-var': 'off',
    'object-shorthand': 'error',
    'one-var': ['error', 'never'],
    'padding-line-between-statements': 'off',
    'prefer-arrow/prefer-arrow-functions': 'off',
    'prefer-const': 'off',
    'prefer-destructuring': 'off',
    // 'react/display-name': 'off',
    // 'react/jsx-boolean-value': 'off',
    // 'react/jsx-closing-tag-location': 'off',
    // 'react/jsx-curly-brace-presence': ['error', 'never'],
    // 'react/jsx-filename-extension': ['error', { extensions: ['.jsx', '.tsx'] }],
    // 'react/jsx-key': 'warn',
    // 'react/jsx-one-expression-per-line': 'off',
    // 'react/jsx-sort-props': 'error',
    // 'react/jsx-tag-spacing': 'off',
    // 'react/no-children-prop': 'error',
    // 'react/no-unknown-property': ['error', { ignore: ['object'] }],
    // 'react/prop-types': 'off',
    // 'react/react-in-jsx-scope': 'off',
    // 'react/self-closing-comp': 'error',
    'sort-destructure-keys/sort-destructure-keys': 2,
    'sort-export-all/sort-export-all': [
      'error',
      'asc',
      {
        caseSensitive: false,
      },
    ],
    'sort-imports': ['error', { ignoreDeclarationSort: true }],
    'sort-keys': 'off',
    'unused-imports/no-unused-imports': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'off',
    curly: 'error',
    eqeqeq: 'off',
    radix: 'error',
  },

  settings: {
    react: {
      version: 'detect',
    },
  },
}
